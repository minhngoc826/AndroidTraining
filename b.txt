diff --git a/DevopsDoc/0.DevOps.txt b/DevopsDoc/0.DevOps.txt
index 1aae9a9..630c7a2 100644
--- a/DevopsDoc/0.DevOps.txt
+++ b/DevopsDoc/0.DevOps.txt
@@ -293,7 +293,7 @@
 							spring.datasource.testOnBorrow=true									
 							spring.datasource.hikari.maximum-pool-size=10						
 						
-				- build:	(user shoeshop)			mvn install -DskipTest=true						(-DskipTest: bß╗Å qua maven auto test)				--> build ra 'target' folder
+				- build:	(user shoeshop)			mvn install -DskipTests=true						(-DskipTests: bß╗Å qua maven auto test)				--> build ra 'target' folder
 					
 				- run:		(user shoeshop)			nohup java -jar target/pathOfJarFile 2>&1 &		(nohup: auto save log to nohup.out file, 		2>&1 &: chß║íy background -> kill process: kill -9 pId, -9=buß╗Öc dß╗½ng)
 													nohup java -jar target/shoe-ShoppingCart-0.0.1-SNAPSHOT.jar 2>&1 &								// -Djava.net.preferIPv4Stack=true: set IPv4  		-Djava.net.preferIPv6Addresses=false
@@ -492,7 +492,7 @@
 							- whoami
 							- pwd
 							- ls
-							- mvn install -DskipTest=true
+							- mvn install -DskipTests=true
 						tags:
 							- gitlab-runner
 					
@@ -625,7 +625,7 @@
 					FROM maven:3.5.3-jdk-8-alpine as build						# tß║ío input build cho run state
 					WORKDIR /app
 					COPY . .
-					RUN mvn install -DskipTest=true								# build folder: /app/target
+					RUN mvn install -DskipTests=true								# build folder: /app/target
 					
 				+ ## run state
 					-------------------------------------------------------------------------
@@ -664,7 +664,11 @@
 			* Note: size of image chß╗ë phß╗Ñ thuß╗Öc step run, ko phß╗Ñc thuß╗Öc step build
 		
 		+ Dockerize project: frontend
-			- 
+			- build: 
+				+ RUN npm install
+				+ RUN npm run build
+			- run: 
+				+ copy /dist/ to /usr/share/nginx/html/
 			
 		+ Example: https://elroydevops.tech/mau-dockerfile-cac-du-an/
 		
@@ -709,6 +713,9 @@
 					- docker push domain/project/repo:tag							// format: domain/project/repo:tag				// 192.168.56.10:5000/devops/shoeshop:v3	
 					- docker pull 192.168.56.10:5000/devops/shoeshop:v3
 					
+				+ convert domain port:
+					- 
+					
 			- harbor: cß║ºn mua domain (50k), thu├¬ vps gi├í rß║╗		- 	
 				+ vps: 		aws EC2
 					- aws EC2:
@@ -733,14 +740,137 @@
 			- Docker network
 		
 		+ Docker & Gitlab CI/CD:
-			- 
+			- usermod -aG docker gitlab-runner					// add group docker for user gitlab-runner, ─æß╗â gitlab c├│ thß╗â run docker
+			- image format domain/project/image:tag_commit		-> add variables for Gitlab: project settings -> CI/CD -> Variables -> add variables for registry:	REGISTRY_URL / PROJECT / VERSION / USER / PASSWORD
+			- edit .gitlab-ci.yml:																										Gitlab variables:			CI_PROJECT_NAME, CI_COMMIT_TAG, CI_COMMIT_SHORT_SHA
+				+ variables global:		
+					- DOCKER_IMAGE: 		${REGISTRY_URL}/${REGISTRY_PROJECT}/${CI_PROJECT_NAME}:${CI_COMMIT_TAG}_${CI_COMMIT_SHORT_SHA}
+					- DOCKER_CONTAINER:		$CI_PROJECT_NAME
+				+ build&push:
+					- before_script: 	docker login ${REGISTRY_URL} -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD}
+					- script:			docker buil -t ${DOCKER_IMAGE} .												docker push $DOCKER_IMAGE
+				+ run:
+					- before_script: 	docker login ${REGISTRY_URL} -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD}
+					- script:			docker run --name $DOCKET_CONTAINER -dp 8080:8080 $DOCKER_IMAGE					// note: port in Dockerfile must same containerPort in run command: -dp 8080:8080 and not use port which is running on server
+				+ showlog:
+					- script:			docker logs $DOCKER_CONTAINER
+			- note: 
+				+ REGISTRY_URL: 
+					- harbor registry: 		server.example.com
+					- private registry:		192.168.56.10:5000			// tr╞░ß╗¢c hß║┐t cß║ºn add cert cho gitlab ─æß╗â truy cß║¡p docker registry; need port, nß║┐u convert ─æ╞░ß╗úc 192.168.56.10:5000 sang domain server.example.com th├¼ d├╣ng server.example.com
 		
-	1.5. Jenkins
-	
-	1.6. Monitoring
-	
+	1.5. Jenkins:
+		- Define:				1 m├íy chß╗º tß╗▒ ─æß╗Öng h├│a (open source) h├áng ─æß║ºu, cung cß║Ñp nhiß╗üu plugins hß╗ù trß╗ú x├óy dß╗▒ng, triß╗ân kh├íi v├á tß╗▒ ─æß╗Öng h├│a bß║Ñt k├¼ project, ko chß╗ë l├á CI/CD		- language: groovy
+		- install jenkins:		create file: /tools/jenkins/jenkins-install.sh				-> 		run: chmod +x ../jenkins-install.sh (cap quyrn execute)				sh/bash ../jenkins-install.sh
+									#!/bin/bash
+									apt install openjdk-17-jdk -y
+									java --version
+									wget -p -O - https://pkg.jenkins.io/debian/jenkins.io.key | apt-key add -
+									sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
+									apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5BA31D57EF5975CA
+									apt-get update
+									apt install jenkins -y
+									systemctl start jenkins
+									ufw allow 8080					# open firewall port 8080 for jenkins
+								
+								+ add host for jenkins-sever & window host: 192.168.56.40 jenkins.devops.tech
+								+ reverse proxy: 
+									- dung webserver: 	nginx
+									- file config:		nano /etc/nginx/conf.d/jenkins.devops.tech.conf
+								+ neu co nhieu version java:	update-alternatives --config java -> select jdk muß╗æn d├╣ng
+								
+		- Jenkins: la noi chay pipeline, ko deploy project tren jenkins server
+		- Manage Jenkins:
+			+ System:	
+			+ Plugins:	add/remove plugin
+			+ Nodes: 	add node server agent vao jenkins server -> dung jenkins agent de connect toi cac server deploy project, ko su dung ssh vi rat nguy hiem (ket noi p2p)
+			+ Security:	phan quyen, jenkins defalut ko co phan quyen, c├ái plugin ─æß╗â ph├ón quyß╗ün
+			+ Crendentials:		save password, private key, ...
+			+ Users:
+			+ Systemlog:	
+			+ Jenkins CLI: 		ho├án to├án tß╗▒ ─æß╗Öng mß╗ìi thß╗⌐
+		
+		- Jenkins CI/CD:
+			// 1. kß║┐t nß╗æi jenkins-server ─æß║┐n lab-server: 		jenkins Agent
+			+ Jenkins Agent:				java version on client ~ java version on Jenkins server install (thay v├¼ d├╣ng ssh - kß║┐t nß╗æi ngang h├áng, ko bß║úo mß║¡t, dß╗à g├óy lß╗ùi)
+				- lab-server: 				
+					+ install java version for node (same java version on jenkins): apt install jdk...
+					+ adduser jenkins
+					+ add folder: /var/lib/jenkins (n╞íi l╞░u c├íc project cß║ºn triß╗ân khai tr├¬n lab-server)		-> 		chown -R jenkins. /var/lib/jenkins
+					+ ─æß╗â user jenkins chß║íy ─æc file project (.jar) th├¼ cß║ºn g├ín quyß╗ün NOPASSWD cho user jenkins giß╗æng user gitlab-runner
+				- Jenkins:				
+					+ add Node:		
+						- number of executors: 	sß╗æ pipeline ─æc chß║íy c├╣ng l├║c	-	Custom workdir path / Remote root directory: 1 folder on lab-server (/var/lib/jenkins)
+						- port/inbound:			create fixed port in Security (ko ─æc tr├╣ng port)	
+						- save:					click to node to show config to connect client -> run from agent command line, with the secret stored in a file
+				- lab-server:			su jenkins	-	cd /var/lib/jenkins														// ko d├╣ng user root
+										echo 377af60a51c9471b486e10c4b928ca5fb66c430986e337b67162df2bdc101e1a > secret-file
+										curl -sO http://jenkins.devops.tech:8080/jnlpJars/agent.jar
+										java -jar agent.jar -url http://jenkins.devops.tech:8080/ -secret @secret-file -name "lab-server" -webSocket -workDir "/var/lib/jenkins" > nohup.out 2>&1 &
+			
+			// 2. kß║┐t nß╗æi jenkins-server ─æß║┐n gitlab-server: 	2.1. plugin-gitlab & BlueOcen		2.2. tß║ío pipeline CI/CD
+			+ Jenkins Gitlab:
+				// 2.1. Kß║┐t nß╗æi jenkins-server ─æß║┐n gitlab-server
+				- Gitlab:
+					+ tß║ío user jenkins c├│ quyß╗ün admin, ─æß╗â c├│ thß╗â pull bß║Ñt cß╗⌐ project n├áo	-> 	login user jenkins -> Profile -> Access Token: tß║ío token with scope API (glpat-yxTGnBKM4XPAEYJ8WiUZ: add token v├áo jenkins)
+				- Jenkins: 
+					+ install plugin: 	Gitlab, BlueOcen (down log, UI hiß╗çn ─æß║íi h╞ín)			- add domain gitlab
+					+ Manage Jenkins:	-> System -> Gitlab:	set name - domain - add API token [Domain: Global  -  Kind: API token  -  Scope: Global/System  -  ID: jenkins-gitlab-user] -> Add -> Test Connection Success
+					+ Save
+				// 2.2. Tß║ío pipeline CI/CD
+				- Jenkins: create Folder & Pipeline
+					+ Folder:	(Dashboard -> New Item) tß║ío mß╗ùi folder cho dß╗▒ ├ín -> chß╗⌐a jobs cß╗ºa dß╗▒ ├ín ─æ├│
+						- lab-server: folder Action-in-lab
+					+ Pipeline: tß║ío pipeline cho dß╗▒ ├ín in folder Action-in-lab ( Dashboard -> Action-in-lab folder -> New Item -> Pipeline: name shoeshop) -> Config as below:
+						- Config pipeline shoeshop:	(Full project name: Action-in-lab/shoeshop)
+							- Discard old builds: 	Max build to keep - giß╗» lß║íi sß╗æ bß║ún build latest = 10
+							- Gitlab connection:
+							- Build trigger: 		event push, merge, ...
+							- Pipeline:				Pipeline script from SCM -> SCM: Git / Repo Url: http://gitlab.devops.tech/group/shoeshop.git / Credentials: new Jenkins [user: jenkins, pass: password]
+							- Branches to build:	add multi branch
+							- Jenkinsfile:			create file on git project
+						- Save
+						
+					+ Token for user jenkins:		Account -> Security -> API token: add new token (n├¬n tß║ío user ri├¬ng cho project)
+				- Gitlab:
+					+ add host for jenkins domain jenkins.devops.tech
+					+ Allow Webhooks:	Admin Setting -> Network -> Outbound request:  Allow requests to the local network from webhooks and integrations -> Save
+					+ Add Webhooks:		Project Setting -> Webhooks) add Webhooks from Jenkins info
+						- URL: format [http://<user jenkins>:<token user jenkins>@<domain jenkins>/project/<path of project on jenkins>]	// http://user:token@jenkins.devops.tech/project/Action-in-lab/shoeshop
+						- Add -> Test event: Http 200 = success
+						
+					+ Add Jenkinsfile for project: groovy syntax
+						pipeline {
+							agent {
+								label 'lab-server-label'
+							}
+							environment {
+								appUser = "shoeshop"
+								appName =  "shoe-ShoppingCart"
+								appVersion = "0.0.1-SNAPSHOT"
+								appType = "jar"
+								processName = "${appName}-${appVersion}.${appType}"
+								folderDeploy = "/datas/${appUser}"
+								buildScript = "mvn clean install -DskipTests=true"
+							}
+							stages {
+								stage('build') {
+									steps {
+										sh(script: """ whoami;pwd;ls -la;${buildScript} """, label: "build-job with maven")
+									}
+								}
+							}
+						}
+
+		
+		// 1. kß║┐t nß╗æi jenkins-server ─æß║┐n lab-server: 		jenkins Agent
+		// 2. kß║┐t nß╗æi jenkins-server ─æß║┐n gitlab-server: 	plugin-gitlab & BlueOcen
+		
+	1.6. Mornitoring
+
+
 
-https://www.baeldung.com/linux/virtualbox-ping-guest-machines
+// https://www.baeldung.com/linux/virtualbox-ping-guest-machines
 
 Windows 11 is not listing a bridged adapter for VirtualBox
 Since I've ended up on this old topic from Windows 11 issues, I'm sure others also will, so I wanted to provide an up to date answer for those experiencing this on Windows 11.
diff --git a/DevopsDoc/IpPortServer.txt b/DevopsDoc/IpPortServer.txt
index 137548c..4d66988 100644
--- a/DevopsDoc/IpPortServer.txt
+++ b/DevopsDoc/IpPortServer.txt
@@ -29,4 +29,59 @@ desktop					192.168.56.40
 						-> docker: contains docker image --> push image to registry
 
 3. Server (dev-server):	deploy web, app
-						-> docker: registry-server
\ No newline at end of file
+						-> docker: registry-server

+
+
+//////////////////////////////////////////////////////////////
+	- docker registry:
+		+
+		+
+		+ private registry: self authentication
+			- install openssl:				apt install openssl -y			mkdir -p /tools/docker/registry/certs & data
+			- gen key:						cd /tools/docker/registry/		openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key -subj "/CN=192.168.1.10" -addext "subjectAltName=DNS:192.168.1.10,IP:192.168.1.10" -x509 -days 3650 -out certs/domain.crt
+			- write docker-compose.yml:		same above of docker-compose	-> run: docker-compose up -d		// 	before: 	cd /tools/docker/registry/		nano docker-compose.yml
+			- copy cert to any client:		mkdir -p /etc/docker/certs.d/192.168.56.10:5000						cp 	/tools/docker/registry/certs/domain.crt 	/etc/docker/certs.d/192.168.56.10:5000/ca.crt
+			- check:
+				+ docker-compose ps						// list docker-compose running
+				+ 192.168.56.10:5000/v2/_catalog:		// list images on registry								// registry-domain/v2/_catalog ~ registry.devops.com/v2/_catalog
+				+ 192.168.56.10:5000/v2/image/tag/list:	// list tags of image on registry
+			
+			
+			
+//////////////////////////////////////////////////////////////
+- M├┤ h├¼nh CI/CD:
+	- TCB:
+		+ Team: 		Sec - Vault			Ops - System		 Dev - Code
+		+ Tool CI/CD:	jenkins - ansible
+		+ Repo:			gitlab
+		+ 1 t├ái khoß║ún ─æß║╖c quyß╗ün vß╗¢i full quyß╗ün t├íc ─æß╗Öng l├¬n server, tkdq nhß║¡p use/path l├¬n vault path, pass chia 2 nß╗¡a, sec g├╡ 1 nß╗¡a, ops g├╡ 1 nß╗¡a, sau khi nhß║¡p xong th├¼ sec/ops chß╗ë biß║┐t l├á c├│ c├íi path ─æ├│, ko biß║┐t pass l├á j.
+		+ Dev code & commit tr├¬n repo dev -> sau 30'-1h repo dev ─æc sync ─æß║┐n repo prod, ops c┼⌐ng viß║┐t pipeline ─æß╗â cicd cho app v├á commit nh╞░ vß║¡y.
+		+ trong pipeline, ops define url vault, path vault, trong jenkins ops define credential vault -> ─æß║┐n ng├áy golive th├¼ chß║íy
+
+- gitops: sß╗¡ dß╗Ñng kß║┐t hß╗úp vß╗¢i Vault, ko l╞░u secret trong git.
+- kyverno: xß╗¡ l├╜ ph├ón quyß╗ün
+- Vault: quß║ún l├╜ secret tß║¡p trung, edit/update secret -> ko c├│ quyß╗ün v├áo Vault th├¼ ko xem ─æc
+	+ ks8 load secret by Agent -> ph├ón quyß╗ün xem secret
+	+ gitlab: save path of secret on Vault, ko ─æc khai b├ío secret trß╗▒c tiß║┐p
+	
+	+ nß║┐u k sß╗¡ dß╗Ñng Vault, khi agent inject secret v├áo pod th├¼ secret sß║╜ l├á env var/file, bß║Ñt cß╗⌐ ai c├│ quyß╗ün exec pod c┼⌐ng xem ─æc secret (maintainer) -> d├╣ng Vault
+		- if not Vault: xxx
+	+ Gitlab-CI:
+		+ save value of Vault
+		+ cß║ºn x├íc thß╗▒c (user, pass) ─æß║┐n Vault rß╗ôi mß╗¢i pull value vß╗ü ─æ╞░ß╗úc.
+		-> d├╣ng gitlab-secret
+	+ Jenkins: define secret trong credential
+		
+- Security:
+	+ Quy tr├¼nh use, save credential, ph├ón quyß╗ün, quß║ún l├╜ ntn:
+		- credential save on Vault, chia 2 nß╗¡a, ops 1 nß╗¡a, sec 1 nß╗¡a
+		- khai b├ío secret v├áo helm/manifest, path l├á url tr├¬n vault, ─æ├ú gß╗ôm 2 nß╗¡a tr├¬n kia
+	+ QT1:
+		- Cluster: 	d├╣ng RBAC giß╗¢i hß║ín quyß╗ün cß╗ºa user, cho ph├⌐p user/group c├│ quyß╗ün j vß╗¢i secret/pro/deployment
+		- k8s:		c┼⌐ng cß║ºn ph├ón quyß╗ün pod, ..., ko phß║úi ai c┼⌐ng c├│ thß╗â xem secret hay exec pod ─æc
+		
+	
+	+ Secrets Store CSI Driver: kß║┐t hß╗úp vs Dev + RBAC ─æß╗â ph├ón quyß╗ün cho api k8s
+- Migrate DB:
+	+ 
+	+ 
\ No newline at end of file
